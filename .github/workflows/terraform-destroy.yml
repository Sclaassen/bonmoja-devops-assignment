name: Terraform Destroy

on:
  workflow_dispatch:  # Manual trigger only

env:
  AWS_BUCKET_NAME: ${{ secrets.TF_STATE_BUCKET_NAME }}
  AWS_BUCKET_KEY_NAME: ${{ secrets.TF_STATE_BUCKET_KEY }}

jobs:
  terraform-destroy:
    runs-on: ubuntu-latest
    environment: demo
    defaults:
      run:
        working-directory: ./
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_LOG: INFO
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}
      TF_VAR_environment: ${{ vars.ENVIRONMENT }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_db_name: ${{ secrets.DB_NAME }}
      TF_VAR_db_username: ${{ secrets.DB_USER }}
      TF_VAR_sns_subscription_email: ${{ vars.SNS_SUBSCRIPTION_EMAIL }}
      TF_VAR_subnet_availability_zones: ${{ vars.SUBNET_AVAILABILITY_ZONES }}
      TF_VAR_vpc_cidr: ${{ vars.VPC_CIDR }}
      TF_VAR_public_subnet_cidrs: ${{ vars.PUBLIC_SUBNET_CIDRS }}
      TF_VAR_private_subnet_cidrs: ${{ vars.PRIVATE_SUBNET_CIDRS }}
      TF_VAR_rds_instance_class: ${{ vars.RDS_INSTANCE_CLASS }}
      TF_VAR_rds_allocated_storage: ${{ vars.RDS_ALLOCATED_STORAGE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Format Check
        run: terraform fmt -recursive

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET_NAME }}" \
            -backend-config="key=${{ secrets.TF_STATE_BUCKET_KEY }}" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ secrets.TF_STATE_DYNAMODB_TABLE }}" \
            -input=false

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false
